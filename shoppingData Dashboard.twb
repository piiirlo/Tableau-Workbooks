<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
        <calculation class='tableau' formula='&quot;Units Sold&quot;' />
        <members>
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Units Sold&quot;' />
          <member value='&quot;Cost of Goods&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' inline='true' name='federated.1dq3vqc06y8ime14ibyr7055doa6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='soft_drink_sales' name='textscan.03vdojo0tp1duj1d1z2vt1myqsdd'>
            <connection class='textscan' directory='C:/Users/Hp/Downloads/vizwiz-sample-soda-sales/vizwiz-sample-soda-sales' filename='soft_drink_sales.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us_ak_hi_states_shift_conformal_faux_WM' name='ogrdirect.1vrl9o91j2t8q71gf9r2e09qi5hh'>
            <connection class='ogrdirect' directory='C:/Users/Hp/Downloads/states_and_counties_boom/states_and_counties_boom' filename='us_ak_hi_states_shift_conformal_faux_WM.shp' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03vdojo0tp1duj1d1z2vt1myqsdd' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Product' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='integer' name='Units Sold' ordinal='3' />
            <column datatype='integer' name='Revenue' ordinal='4' />
            <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
            <column datatype='integer' name='Profit' ordinal='6' />
            <column datatype='date' name='Purchase Date' ordinal='7' />
            <column datatype='string' name='Customer Name' ordinal='8' />
            <column datatype='string' name='Customer State' ordinal='9' />
            <column datatype='string' name='Customer City' ordinal='10' />
            <column datatype='integer' name='Customer Zip Code' ordinal='11' />
            <column datatype='string' name='Order ID' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.03vdojo0tp1duj1d1z2vt1myqsdd' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Product' ordinal='0' />
              <column datatype='string' name='Company' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='integer' name='Units Sold' ordinal='3' />
              <column datatype='integer' name='Revenue' ordinal='4' />
              <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
              <column datatype='integer' name='Profit' ordinal='6' />
              <column datatype='date' name='Purchase Date' ordinal='7' />
              <column datatype='string' name='Customer Name' ordinal='8' />
              <column datatype='string' name='Customer State' ordinal='9' />
              <column datatype='string' name='Customer City' ordinal='10' />
              <column datatype='integer' name='Customer Zip Code' ordinal='11' />
              <column datatype='string' name='Order ID' ordinal='12' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1vrl9o91j2t8q71gf9r2e09qi5hh' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
            <columns>
              <column datatype='string' name='STATEFP' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='spatial' name='Geometry' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Units Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Units Sold</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Revenue]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Goods Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost of Goods Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Cost of Goods Sold</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Purchase Date]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Purchase Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer State]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer City]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer Zip Code]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Zip Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEFP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEFP]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>STATEFP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_E70AB2044ADF4A8496F285727433ACB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_E70AB2044ADF4A8496F285727433ACB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>15</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_E70AB2044ADF4A8496F285727433ACB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Metric Selected ' datatype='integer' name='[Calculation_2527645317118533633]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Customer City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Customer Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
      <column caption='Statefp' datatype='string' name='[STATEFP]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='soft_drink_sales.csv' datatype='table' name='[__tableau_internal_object_id__].[soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_ak_hi_states_shift_conformal_faux_WM.shp' datatype='table' name='[__tableau_internal_object_id__].[us_ak_hi_states_shift_conformal_faux_WM.shp_E70AB2044ADF4A8496F285727433ACB3]' role='measure' type='quantitative' />
      <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer State)' hidden='true' name='[Action (Customer State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer State]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Purchase Date))' hidden='true' name='[Action (MONTH(Purchase Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Product)' hidden='true' name='[Action (Product)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Customer State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
          <calculation class='tableau' formula='&quot;Units Sold&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='soft_drink_sales.csv' id='soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98'>
            <properties context=''>
              <relation connection='textscan.03vdojo0tp1duj1d1z2vt1myqsdd' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Product' ordinal='0' />
                  <column datatype='string' name='Company' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='integer' name='Units Sold' ordinal='3' />
                  <column datatype='integer' name='Revenue' ordinal='4' />
                  <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
                  <column datatype='integer' name='Profit' ordinal='6' />
                  <column datatype='date' name='Purchase Date' ordinal='7' />
                  <column datatype='string' name='Customer Name' ordinal='8' />
                  <column datatype='string' name='Customer State' ordinal='9' />
                  <column datatype='string' name='Customer City' ordinal='10' />
                  <column datatype='integer' name='Customer Zip Code' ordinal='11' />
                  <column datatype='string' name='Order ID' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_ak_hi_states_shift_conformal_faux_WM.shp' id='us_ak_hi_states_shift_conformal_faux_WM.shp_E70AB2044ADF4A8496F285727433ACB3'>
            <properties context=''>
              <relation connection='ogrdirect.1vrl9o91j2t8q71gf9r2e09qi5hh' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
                <columns>
                  <column datatype='string' name='STATEFP' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='spatial' name='Geometry' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Customer State]' />
              <expression op='[Name]' />
            </expression>
            <first-end-point object-id='soft_drink_sales.csv_628AC4BCF09B4439BC1391B7E773FC98' />
            <second-end-point object-id='us_ak_hi_states_shift_conformal_faux_WM.shp_E70AB2044ADF4A8496F285727433ACB3' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1dq3vqc06y8ime14ibyr7055doa6'>
      <datasources>
        <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
      </datasources>
      <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]'>
        <groupfilter function='level-members' level='[Customer State (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]'>
        <groupfilter function='level-members' level='[none:Company:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]' included-values='in-range'>
        <min>#2020-01-01 00:00:00#</min>
        <max>#2023-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_D3797A49837943BFB101CB4476B3657A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_93DA2909B5EE42CC8117444F7EF35C5E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='MAP' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_E1A47460FC9E40B9B842E4FDA577156A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Line Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B351DBAA179845E2AF300313D61FFF62]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BANs'>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
          </datasources>
          <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Goods Sold]' derivation='Sum' name='[sum:Cost of Goods Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Units Sold]' derivation='Sum' name='[sum:Units Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Units Sold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Cost of Goods Sold:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Units Sold:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Cost of Goods Sold:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_D3797A49837943BFB101CB4476B3657A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action2_93DA2909B5EE42CC8117444F7EF35C5E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action4_B351DBAA179845E2AF300313D61FFF62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[:Measure Names]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Multiple Values]' />
              <text column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.1dq3vqc06y8ime14ibyr7055doa6].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='11'><![CDATA[<[federated.1dq3vqc06y8ime14ibyr7055doa6].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B85102A0-71EE-4786-A351-F66DDD9D2C8A}' />
    </worksheet>
    <worksheet name='Customer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by Customer&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
              <calculation class='tableau' formula='&quot;Units Sold&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
            <column caption='Metric Selected ' datatype='integer' name='[Calculation_2527645317118533633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2527645317118533633]' derivation='Sum' name='[sum:Calculation_2527645317118533633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action2_93DA2909B5EE42CC8117444F7EF35C5E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action4_B351DBAA179845E2AF300313D61FFF62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer Name:nk]</rows>
        <cols>[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]</cols>
      </table>
      <simple-id uuid='{B2F31436-C6C7-46ED-8347-4203BDEE078E}' />
    </worksheet>
    <worksheet name='Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
              <calculation class='tableau' formula='&quot;Units Sold&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
            <column caption='Metric Selected ' datatype='integer' name='[Calculation_2527645317118533633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2527645317118533633]' derivation='Sum' name='[sum:Calculation_2527645317118533633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_D3797A49837943BFB101CB4476B3657A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action2_93DA2909B5EE42CC8117444F7EF35C5E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action4_B351DBAA179845E2AF300313D61FFF62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[tmn:Purchase Date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[tmn:Purchase Date:qk]' field-type='quantitative' max='#2024-10-27 21:23:35.459#' min='#2018-04-23 17:33:02.621#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' field-type='quantitative' max='1971695' min='-14784' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]</rows>
        <cols>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tmn:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{24D7BCC5-DA20-4197-B71A-986BF0E44935}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
              <calculation class='tableau' formula='&quot;Units Sold&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
            <column caption='Metric Selected ' datatype='integer' name='[Calculation_2527645317118533633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2527645317118533633]' derivation='Sum' name='[sum:Calculation_2527645317118533633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_D3797A49837943BFB101CB4476B3657A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action4_B351DBAA179845E2AF300313D61FFF62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Product)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Longitude (generated)]' field-type='quantitative' max='4801018.9146646177' min='-5961569.2937536994' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Latitude (generated)]' field-type='quantitative' max='1451344.8994692056' min='-2432897.398760688' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]' value='Quarter'>
              <formatted-text>
                <run fontalignment='1'>Quarter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' />
              <lod column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[clct:Geometry:nk]' />
              <lod column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer State:nk]' />
              <geometry column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Parameter 1]&gt; :&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Latitude (generated)]</rows>
        <cols>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D737A24F-0394-49DF-BD63-6A69708F53CE}' />
    </worksheet>
    <worksheet name='Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by Product</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
              <calculation class='tableau' formula='&quot;Units Sold&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
            <column caption='Metric Selected ' datatype='integer' name='[Calculation_2527645317118533633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2527645317118533633]' derivation='Sum' name='[sum:Calculation_2527645317118533633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action1_D3797A49837943BFB101CB4476B3657A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action2_93DA2909B5EE42CC8117444F7EF35C5E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer State)]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Product:nk]</rows>
        <cols>[federated.1dq3vqc06y8ime14ibyr7055doa6].[sum:Calculation_2527645317118533633:qk]</cols>
      </table>
      <simple-id uuid='{ED06D019-AAA0-48A5-9646-8B253EEAA959}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]</column>
            <column>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Longitude (generated)]' field-type='quantitative' max='2387505.6120124632' min='-4461508.5816277778' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Latitude (generated)]' field-type='quantitative' max='1527175.3898709412' min='-2451382.7557351738' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[clct:Geometry:nk]' />
              <lod column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer State:nk]' />
              <geometry column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[clct:Geometry:nk]' />
              <color column='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Latitude (generated)]</rows>
        <cols>[federated.1dq3vqc06y8ime14ibyr7055doa6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{35E95581-B398-4B1C-9528-0D6DD1ADAE86}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.1dq3vqc06y8ime14ibyr7055doa6' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Chose a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Units Sold&quot;'>
          <calculation class='tableau' formula='&quot;Units Sold&quot;' />
          <members>
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Units Sold&quot;' />
            <member value='&quot;Cost of Goods&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1dq3vqc06y8ime14ibyr7055doa6'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='12' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
            <zone h='97714' id='10' type-v2='layout-basic' w='98666' x='667' y='1143' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100000' id='1' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='85' h='12143' id='4' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone forceUpdate='true' h='12143' id='5' type-v2='text' w='41666' x='0' y='0'>
              <formatted-text>
                <run bold='true' fontcolor='#f5f5f5' fontsize='20'>KPI Dashboard</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='692' h='12143' id='6' is-fixed='true' name='BANs' show-title='false' w='58334' x='41666' y='0'>
              <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#00009d' />
            </zone-style>
          </zone>
          <zone h='87857' id='7' param='horz' type-v2='layout-flow' w='100000' x='0' y='12143'>
            <zone fixed-size='165' h='87857' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='14417' x='0' y='12143'>
              <zone fixed-size='43' h='7572' id='16' is-fixed='true' name='MAP' param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' show-title='false' type-v2='filter' w='13751' x='333' y='12714'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                </zone-style>
              </zone>
              <zone h='15429' id='17' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='13751' x='333' y='20286'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                </zone-style>
              </zone>
              <zone h='21858' id='13' name='MAP' param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]' type-v2='filter' w='13751' x='333' y='35715'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
              <zone h='18572' id='14' name='MAP' param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]' type-v2='filter' w='13751' x='333' y='57573'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
              <zone h='21858' id='15' name='MAP' param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]' type-v2='filter' w='13751' x='333' y='76145'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='2' h='87857' id='3' is-fixed='true' type-v2='empty' w='500' x='14417' y='12143'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-right' value='2' />
                <format attr='margin-bottom' value='8' />
                <format attr='margin-left' value='2' />
                <format attr='background-color' value='#00009d' />
              </zone-style>
            </zone>
            <zone h='87857' id='19' param='vert' type-v2='layout-flow' w='40041' x='14917' y='12143'>
              <zone h='46714' id='20' name='Line Chart' w='40041' x='14917' y='12143'>
                <layout-cache minheight='180' minwidth='153' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41143' id='21' name='Product' w='40041' x='14917' y='58857'>
                <layout-cache fixed-size-h='280' minwidth='200' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='87857' id='8' param='vert' type-v2='layout-flow' w='45041' x='54958' y='12143'>
              <zone h='35714' id='9' name='MAP' w='45041' x='54958' y='12143'>
                <layout-cache minheight='250' minwidth='200' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52143' id='18' name='Customer' w='45041' x='54958' y='47857'>
                <layout-cache fixed-size-h='186780' minwidth='260' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <simple-id uuid='{0F59155C-36CA-47D4-B520-5F54FB4FA483}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]' type='filter' />
            <card param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Company:nk]' type='filter' />
            <card param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Category:nk]' type='filter' />
            <card param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[dy:Purchase Date:ok]</field>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8C5B69B-C4BA-4613-920B-BC56F54C5FEE}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dq3vqc06y8ime14ibyr7055doa6].[Customer State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{0E104450-A6D0-42A6-91C2-0473F01E6ACA}' />
    </window>
    <window class='worksheet' name='BANs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F00C9EE-93A4-4EF8-9770-90D8CAC0CC26}' />
    </window>
    <window class='worksheet' name='Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C217E3A0-4C33-4702-B270-3DAAF53F6F65}' />
    </window>
    <window class='worksheet' name='Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Customer Name:nk]</field>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EE727C5-9F04-4ACD-B8CA-744268BBFBCD}' />
    </window>
    <window class='worksheet' name='Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dq3vqc06y8ime14ibyr7055doa6].[tmn:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{126A1231-1F65-45E2-A85C-93F33654EDD0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='BANs'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Customer' />
        <viewpoint name='Line Chart'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Product' />
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{A690E606-0149-4A4A-95C7-0AAB1A4B59C8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BANs' width='192'>
      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
      tf8He8AxjWrnO8YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      6mqIBwPOjpwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      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
      /h+zVV4dMbhQ6AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
